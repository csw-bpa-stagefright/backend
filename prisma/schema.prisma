datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

model Bill {
  id          String   @id @default(cuid())
  amount      Float
  description String
  imageUrl    String?
  createdAt   DateTime @default(now())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Concert {
  id          String   @id @default(cuid())
  name        String
  location    String
  date        DateTime
  description String?
  ticketCost  Int
  imageUrl    String?

  tickets           Ticket[]
  concertAttendence ConcertAttendence[]
}

model ConcertAttendence {
  id        String  @id @default(cuid())
  ticketId  String
  ticket    Ticket  @relation(fields: [ticketId], references: [id])
  concertId String
  concert   Concert @relation(fields: [concertId], references: [id], onDelete: Cascade)
}

model Ticket {
  id        String @id @default(cuid())
  concertId String
  userId    String

  concert Concert @relation(fields: [concertId], references: [id], onDelete: Cascade)
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  concertAttendence ConcertAttendence[]
}

model User {
  id             String   @id @default(uuid())
  name           String
  email          String   @unique
  hashedPassword String
  dateCreated    DateTime @default(now())

  bills         Bill[]
  tickets       Ticket[]
  notifications AccountNotification[]
}

model MerchItem {
  id               String  @id @default(cuid())
  merchImageUrl    String
  merchPrice       Float
  merchTitle       String
  merchDescription String?
}

model AdminUser {
  id             String @id @default(uuid())
  name           String
  email          String
  hashedPassword String
}

model AccountNotification {
  id      String @id @default(cuid())
  userId  String
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  header  String
  message String
}
